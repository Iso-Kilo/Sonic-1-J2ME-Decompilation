import javax.microedition.lcdui.Graphics;
import javax.microedition.lcdui.Image;

public final class a {
  public static final int a = c.g;
  
  public static final int b = c.h;
  
  public static final int c = c.i;
  
  private static int d;
  
  private static int e = -1;
  
  private static final int[] a = new int[] { 2228394, 6496256, 4333667, 0, 4456516, 8738 };
  
  public static Image[] a;
  
  public static final int[][][][] a = new int[][][][] { { { { 
            251, 252, 253, 254, 255, 251, 251, 261, 262, 263, 
            251, 252, 253, 254, 255, 251 }, { 
            251, 256, 257, 258, 259, 260, 251, 251, 251, 251, 
            251, 256, 257, 258, 259, 260 }, { 
            251, 251, 251, 251, 251, 251, 251, 264, 251, 251, 
            251, 251, 251, 261, 262, 263 }, { 
            251, 251, 251, 251, 261, 262, 263, 251, 251, 264, 
            251, 251, 251, 251, 251, 251 } }, { { 
            251, 251, 310, 251, 251, 251, 251, 251, 251, 251, 
            251, 251, 251, 251, 251, 251 }, { 
            311, 311, 312, 310, 251, 251, 313, 310, 313, 251, 
            251, 311, 310, 313, 251, 251 }, { 
            314, 315, 316, 317, 319, 318, 317, 315, 317, 319, 
            318, 314, 315, 317, 318, 348 } }, { { 
            283, 284, 285, 286, 295, 296, 297, 298, 270, 269, 
            270, 271, 273, 273, 268, 270 }, { 
            287, 288, 289, 290, 299, 300, 301, 302, 299, 275, 
            276, 277, 278, 279, 274, 299 }, { 
            291, 292, 293, 294, 303, 304, 305, 306, 294, 292, 
            282, 282, 280, 281, 303, 306 } }, { { 
            308, 307, 308, 353, 353, 309, 309, 309, 353, 353, 
            307, 307, 365, 353, 308, 353 }, { 
            307, 308, 365, 307, 307, 365, 308, 353, 307, 308, 
            365, 307, 248, 248, 308, 307 }, { 
            248, 307, 307, 248, 248, 248, 248, 307, 307, 308, 
            248, 248, 249, 248, 248, 249 } }, { { 
            249, 249, 248, 248, 369, 272, 248, 272, 369, 249, 
            249, 248, 369, 272, 368, 249 }, { 
            368, 249, 369, 272, 249, 249, 249, 369, 272, 272, 
            368, 368, 272, 272, 369, 272 }, { 
            250, 250, 250, 250, 354, 354, 250, 354, 250, 250, 
            354, 250, 250, 250, 354, 250 } } }, {}, { { { 
            333, 334, 335, 336, 333, 334, 335, 336, 333, 334, 
            335, 336, 333, 334, 335, 336 }, { 
            335, 336, 333, 334, 335, 336, 333, 334, 335, 336, 
            333, 334, 335, 336, 333, 334 }, { 
            333, 334, 335, 336, 333, 334, 335, 336, 333, 334, 
            335, 336, 333, 334, 335, 336 }, { 
            335, 336, 333, 334, 335, 336, 333, 334, 335, 336, 
            333, 334, 335, 336, 333, 334 }, { 
            341, 341, 342, 342, 342, 343, 344, 345, 346, 343, 
            344, 339, 341, 337, 338, 339 } }, { 
          { 
            348, 244, 246, 248, 250, 345, 346, 344, 348, 254, 
            250, 356, 348, 342, 342, 356 }, { 
            243, 245, 247, 249, 249, 251, 252, 253, 252, 353, 
            249, 251, 243, 252, 253, 243 }, { 
            249, 230, 231, 232, 249, 249, 249, 249, 249, 249, 
            249, 249, 222, 223, 206, 249 }, { 
            213, 233, 234, 235, 219, 207, 215, 220, 219, 220, 
            213, 225, 224, 225, 238, 218 }, { 
            240, 239, 240, 239, 221, 208, 226, 227, 221, 212, 
            240, 239, 354, 239, 240, 239 }, { 
            242, 241, 242, 241, 242, 241, 242, 255, 242, 241, 
            242, 241, 242, 241, 242, 241 }, { 
            239, 240, 239, 240, 239, 240, 239, 240, 239, 240, 
            239, 240, 239, 240, 239, 240 }, { 
            241, 242, 241, 242, 241, 242, 241, 242, 241, 242, 
            241, 242, 241, 242, 241, 242 }, { 
            240, 239, 240, 239, 240, 239, 240, 239, 240, 239, 
            240, 239, 240, 239, 240, 239 }, { 
            242, 241, 242, 241, 242, 241, 242, 241, 242, 241, 
            242, 241, 242, 241, 242, 241 }, 
          { 
            239, 240, 239, 240, 239, 240, 239, 240, 239, 240, 
            239, 240, 239, 240, 239, 240 } }, { 
          { 
            258, 256, 257, 258, 256, 257, 258, 312, 360, 314, 
            256, 257, 258, 256, 257, 328 }, { 
            261, 259, 260, 261, 259, 260, 261, 315, 361, 317, 
            259, 260, 261, 259, 260, 328 }, { 
            264, 262, 285, 286, 286, 287, 264, 318, 319, 320, 
            262, 263, 264, 262, 263, 328 }, { 
            258, 256, 284, 199, 199, 284, 258, 256, 257, 258, 
            256, 257, 258, 256, 257, 328 }, { 
            261, 259, 284, 199, 199, 284, 261, 259, 260, 261, 
            259, 260, 261, 259, 260, 328 }, { 
            264, 262, 284, 199, 199, 284, 264, 262, 263, 264, 
            262, 263, 264, 262, 263, 328 }, { 
            258, 256, 285, 286, 286, 287, 258, 256, 257, 258, 
            256, 257, 258, 256, 257, 328 }, { 
            261, 259, 260, 261, 259, 260, 261, 259, 260, 261, 
            259, 260, 261, 259, 260, 328 }, { 
            264, 262, 263, 264, 262, 263, 264, 262, 263, 264, 
            262, 263, 264, 262, 263, 328 }, { 
            258, 256, 257, 258, 256, 257, 293, 294, 257, 288, 
            289, 257, 258, 256, 257, 328 }, 
          { 
            261, 259, 260, 261, 259, 260, 295, 296, 260, 290, 
            291, 260, 261, 259, 260, 328 }, { 
            264, 262, 263, 264, 262, 263, 295, 296, 263, 290, 
            291, 263, 264, 262, 263, 328 }, { 
            258, 256, 257, 258, 256, 257, 203, 297, 257, 202, 
            292, 257, 258, 256, 257, 328 }, { 
            261, 259, 260, 261, 259, 285, 286, 286, 286, 286, 
            286, 287, 321, 259, 260, 328 }, { 
            264, 262, 263, 264, 262, 308, 309, 310, 308, 309, 
            310, 308, 322, 262, 263, 328 }, { 
            328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 
            328, 328, 328, 328, 328, 328 } } }, {}, { { { 
            432, 432, 63, 64, 54, 33, 432, 408, 432, 51, 
            52, 53, 54, 63, 64, 54 }, { 
            33, 34, 35, 36, 432, 63, 64, 54, 33, 432, 
            63, 408, 51, 52, 53, 54 }, { 
            51, 52, 53, 54, 34, 408, 432, 51, 52, 53, 
            54, 33, 73, 74, 408, 33 }, { 
            432, 432, 63, 64, 53, 54, 432, 432, 432, 51, 
            52, 54, 33, 432, 63, 408 }, { 
            432, 432, 73, 74, 408, 432, 63, 408, 73, 74, 
            408, 432, 51, 52, 54, 33 }, { 
            432, 33, 432, 432, 432, 63, 408, 432, 63, 408, 
            73, 74, 408, 432, 432, 432 }, { 
            432, 432, 63, 432, 432, 33, 432, 432, 432, 432, 
            432, 33, 432, 432, 432, 432 }, { 
            432, 432, 432, 432, 432, 432, 432, 432, 432, 432, 
            432, 432, 432, 432, 432, 432 } }, { 
          { 
            432, 432, 83, 84, 360, 432, 432, 432, 432, 432, 
            432, 83, 84, 432, 432, 432 }, { 
            432, 381, 373, 383, 370, 372, 155, 360, 432, 432, 
            372, 373, 383, 155, 432, 432 }, { 
            372, 377, 383, 383, 376, 377, 383, 370, 371, 381, 
            382, 383, 383, 383, 370, 371 }, { 
            382, 383, 383, 383, 383, 383, 383, 383, 376, 377, 
            383, 383, 383, 383, 383, 376 }, { 
            383, 383, 383, 383, 383, 383, 383, 383, 383, 383, 
            383, 383, 383, 383, 383, 383 }, { 
            383, 383, 405, 427, 405, 383, 383, 383, 383, 383, 
            383, 383, 406, 383, 383, 383 }, { 
            383, 383, 410, 414, 402, 383, 409, 423, 412, 383, 
            383, 412, 416, 405, 383, 383 }, { 
            405, 412, 414, 411, 431, 413, 424, 424, 402, 416, 
            417, 400, 414, 402, 403, 412 }, { 
            410, 410, 402, 414, 425, 400, 414, 410, 402, 411, 
            410, 402, 411, 402, 411, 402 }, { 
            426, 426, 431, 426, 431, 424, 402, 423, 431, 426, 
            424, 423, 431, 431, 426, 431 }, 
          { 
            431, 431, 431, 431, 431, 426, 431, 431, 431, 431, 
            426, 431, 431, 431, 431, 431 } }, { { 
            10, 11, 13, 14, 10, 11, 13, 14, 10, 11, 
            13, 14, 10, 11, 13, 14 }, { 
            21, 23, 24, 25, 21, 23, 24, 25, 21, 23, 
            24, 25, 21, 23, 24, 25 }, { 
            23, 24, 25, 21, 23, 24, 25, 21, 23, 24, 
            25, 21, 23, 24, 25, 21 }, { 
            24, 25, 21, 23, 24, 25, 21, 23, 24, 25, 
            21, 23, 24, 25, 21, 23 }, { 
            25, 21, 23, 24, 25, 21, 23, 24, 25, 21, 
            23, 24, 25, 21, 23, 24 } }, { { 
            32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 
            32, 31, 32, 31, 32, 31 }, { 
            42, 41, 42, 41, 42, 41, 42, 41, 42, 41, 
            42, 41, 42, 41, 42, 41 }, { 
            42, 41, 42, 41, 42, 41, 42, 41, 42, 41, 
            42, 41, 42, 41, 42, 41 }, { 
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
            15, 15, 15, 15, 15, 15 }, { 
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
            15, 15, 15, 15, 15, 15 }, { 
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
            15, 15, 15, 15, 15, 15 }, { 
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
            15, 15, 15, 15, 15, 15 }, { 
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
            15, 15, 15, 15, 15, 15 }, { 
            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
            15, 15, 15, 15, 15, 15 } } }, {} };
  
  public static final int[][] a = new int[][] { { 25, 50, 75, 80, 90, 120 }, {}, { 40, 60, 80, 90 }, {}, { 10, 20, 30, 40 }, {} };
  
  public static final void a(int paramInt1, int paramInt2) {
    e = paramInt1;
    d = paramInt2;
    c.a(e, d);
    b();
  }
  
  public static void a(Graphics paramGraphics, int paramInt1, int paramInt2, boolean paramBoolean) {
    a(paramGraphics, paramInt1, paramInt2, paramBoolean ? a[e] : new int[(a[e]).length]);
  }
  
  private static void b() {
    try {
      a = (int[][])new Image[(a[e]).length];
      for (byte b = 0; b < (a[e]).length; b++) {
        a[b] = (int[])Image.createImage((a[e][b][0]).length * 16, (a[e][b]).length * 16);
        Graphics graphics;
        (graphics = a[b].getGraphics()).setColor(a[e]);
        graphics.fillRect(0, 0, a[b].getWidth(), a[b].getHeight());
        for (byte b1 = 0; b1 < (a[e][b]).length; b1++) {
          for (byte b2 = 0; b2 < (a[e][b][b1]).length; b2++) {
            int i;
            if ((i = a[e][b][b1][b2]) >= 0) {
              int j = i % 16 * 16;
              int k = i / 16 * 16;
              graphics.setClip(b2 * 16, b1 * 16, 16, 16);
              graphics.drawImage((Image)c.a, b2 * 16 - j, b1 * 16 - k, 20);
            } 
          } 
        } 
      } 
      return;
    } catch (Exception exception) {
      return;
    } 
  }
  
  public static void a() {
    a = null;
    System.gc();
  }
  
  private static int a(Graphics paramGraphics, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfint) {
    if ((paramInt2 = -paramInt2) > 0)
      paramInt2 = 0; 
    int i = paramInt2 + c.i - 4;
    byte b = 0;
    for (int j = paramInt3; j < paramInt4; j++) {
      do {
        int k = a[j].getWidth();
        int m = -(paramInt1 * paramArrayOfint[b] / 100 % k);
        int n = a / k + 2;
        for (byte b1 = 0; b1 < n; b1++)
          paramGraphics.drawImage((Image)a[j], m + k * b1, i, 20); 
        i += a[j].getHeight();
        if (b >= paramArrayOfint.length - 1)
          continue; 
        b++;
      } while (j == paramInt4 - 1 && paramInt2 + i < c + b);
    } 
    return i;
  }
  
  private static void a(Graphics paramGraphics, int paramInt1, int paramInt2, int[] paramArrayOfint) {
    // Byte code:
    //   0: getstatic a.e : I
    //   3: tableswitch default -> 125, 0 -> 36, 1 -> 125, 2 -> 67, 3 -> 125, 4 -> 36
    //   36: iload_2
    //   37: iconst_5
    //   38: ishr
    //   39: dup
    //   40: istore_2
    //   41: bipush #32
    //   43: if_icmple -> 49
    //   46: bipush #32
    //   48: istore_2
    //   49: aload_0
    //   50: iload_1
    //   51: iload_2
    //   52: iconst_0
    //   53: getstatic a.a : [[[[I
    //   56: getstatic a.e : I
    //   59: aaload
    //   60: arraylength
    //   61: aload_3
    //   62: invokestatic a : (Ljavax/microedition/lcdui/Graphics;IIII[I)I
    //   65: pop
    //   66: return
    //   67: iload_2
    //   68: sipush #420
    //   71: if_icmpge -> 85
    //   74: iload_2
    //   75: iconst_1
    //   76: ishr
    //   77: dup
    //   78: istore_2
    //   79: sipush #244
    //   82: goto -> 106
    //   85: iload_2
    //   86: sipush #950
    //   89: if_icmple -> 102
    //   92: iload_2
    //   93: iconst_1
    //   94: ishr
    //   95: istore_2
    //   96: iinc #2, -12
    //   99: goto -> 108
    //   102: iload_2
    //   103: sipush #488
    //   106: isub
    //   107: istore_2
    //   108: aload_0
    //   109: iload_1
    //   110: iload_2
    //   111: iconst_0
    //   112: getstatic a.a : [[[[I
    //   115: getstatic a.e : I
    //   118: aaload
    //   119: arraylength
    //   120: aload_3
    //   121: invokestatic a : (Ljavax/microedition/lcdui/Graphics;IIII[I)I
    //   124: pop
    //   125: return
  }
}